---
title: "The Role of Shelters in Providing Emergency Housing especially for the Homeless"
author: Syed Hassan
thanks: "Code and data are available at: https://github.com/saiyedgh/Shelters_Toronto.git"
date: "`r Sys.time()`"
date-format: "D MMMM YYYY"
abstract: "The city and the people of Toronto provide shelter to thousands of people every year. The majority that takes benefit from the city's overnight shelter are the homeless. The occupancy of these shelters is 100% on most nights and rarely does space go unoccupied. We need to make these shelters more accessible for the homeless and provide more funding to expand the program."
format: pdf
toc: TRUE
number-sections: true
bibliography: references.bib
---

```{r}
#| messages: false
#| echo: false
#| warning: false
#| output: false
#### Preamble ####
# Title: 
# Author: Syed Hassan
# Email: syed.ext@gmail.com
# Date: 16 March 2023
# GitHub: https://github.com/saiyedgh/Shelters_Toronto.git
```



```{r}
#| include: false
#| echo: false
#| warning: false
#| message: false

##### Install and run the required libraries and packages #####

## Install
# uncomment the installation files for your
# install.packages("tidyverse")
# install.packages("here")
# install.packages("readr")
# install.packages("readxl")
# install.packages("kableExtra")
# install.packages("scales")
# install.packages("knitr")
# install.packages("janitor")
# install.packages("lubridate")
# install.packages("ggbump")

## Run
library(opendatatoronto)
library(tidyverse)
library(here)
library(readr)
library(readxl)
library(kableExtra)
library(scales)
library(knitr)
library(janitor)
library(lubridate)
library(ggbump)
```

\

# Introduction

Homelessness is a genuine concern of the city and the people of Toronto. The city has acquired plenty of permanent and temporary shelters to provide better housing and overnight shelters for the homeless as well as others seeking emergency housing. The city of Toronto, like many other metropolitan cities, has suffered from the problem of homelessness for years. However, the role of the shelters in helping the homeless might go unnoticed because of the increasing numbers on the streets. My analysis aims to discover the issue in detail using data provided by the city of Toronto. Through my analysis, I aim to take you deep into statistics as well as focus on the patterns in order to develop empathy for the homeless. Lastly, the analysis will conclude the role of the shelters of Toronto in helping people overall and how they can improve to include more people in need.

# Data

## Source
The dataset is obtained from Opendatatoronto [@opendatatoronto], which focuses on daily shelter provided by the city and charities in Toronto. The overnight service keeps a record of the daily users accessing the shelter service with capacity and other important information. The data identifies the unique locations, the organizations involved, the various districts of the city, the types of programs, and the sector of the shelters.

The dataset is fairly new and limited because it was initiated in the year 2021. Despite the limited years of data, it is updated and maintained frequently, having a gold status on the platform. The dataset does not explicitly incorporates homelessness in its variables. However, according to the database glossary and description, the main users of the shelter service are predominantly the homeless [@glossary].

## Methodology
The dataset allows us to seek insights related to the last two years. Therefore, the paper will include comparisons across 2021 and 2022. Because the design of the dataset is based on the daily service, the daily statistics will be used to measure growth or decline in numbers. The analysis will also incorporate the different programs and sectors that the shelters serve and their trends and change over time. The data extraction and visualization will help the overall analysis by providing statistical and semantic insights about the operations of the shelters. Due to the majority of shelters having a homeless user base, the report will try to estimate how increasing the number of shelters can help accommodate the homeless population.

Due to the majority of shelters having a homeless user base, the report will try to estimate how increasing the number of shelters can help accommodate the homeless population. Another noticeable and influencing factor in the shelter data is the addition of Covid-19-related programs that might affect the overall numbers. Hence, the analysis will aim to highlight and distinguish between the regular and Covid-19-related programs wherever possible. 

## Visuals and Results

```{r}
#| echo: false
#| warning: false

### load the datasets

data_2022 <- read_csv(
  here::here("inputs/data/clean/clean_data_2022.csv"),
  show_col_types = FALSE
)

data_2021 <- read_csv(
  here::here("inputs/data/clean/clean_data_2021.csv"),
  show_col_types = FALSE
)

# convert character to date
data_2022$occupancy_date <- ymd(data_2022$occupancy_date)

data_2021$occupancy_date <- ymd(data_2021$occupancy_date)

```




```{r}
#| echo: false
#| warning: false
#| label: tbl-1
#| tbl-cap: Total number of shelters in the city of Toronto with average daily users - 2021.

location_and_district_2021 <- data_2021 |> 
  select(location_id, location_city) |>
  distinct() |>
  group_by(location_id, location_city) |>
  summarise(total_count=n(), .groups = 'drop')

city_and_users_2021 <- data_2021 |>
  select(location_city, service_user_count) |>
  group_by(location_city) |> 
  summarise(total_users = sum(service_user_count), .groups = 'drop')

total_shelters_2021 <- location_and_district_2021 |>
  group_by(location_city) |>
  count()
  
shelters_sum_2021 <- sum(total_shelters_2021$n)

combined_df_2021 <- left_join(total_shelters_2021, city_and_users_2021, by = 'location_city') |>
  as.data.frame()

combined_df_2021$users_per_year <- combined_df_2021$total_users / 365

users_sum_2021 <- sum(combined_df_2021$users_per_year)

df_2021 <- combined_df_2021 |>
  select(location_city, n, users_per_year)

total_row_2021 <- data.frame(location_city = "Total",
                         n = shelters_sum_2021, users_per_year = users_sum_2021)

shelters_w_total_2021 <- rbind(df_2021, total_row_2021)

shelters_w_total_2021 |>
  kable(col.names = c("District", "Numbers", "Users")) |>
  kable_styling(
    latex_options = c("striped", "hold_position"),
    font_size=10) |>
  row_spec(0, bold=T) |> 
  row_spec(7, bold=T)
```


```{r}
#| echo: false
#| warning: false
#| label: tbl-2
#| tbl-cap: Total number of shelters in the city of Toronto with average daily users - 2022.

location_and_district <- data_2022 |> 
  select(location_id, location_city) |>
  distinct() |>
  group_by(location_id, location_city) |>
  summarise(total_count=n(), .groups = 'drop')

city_and_users <- data_2022 |>
  select(location_city, service_user_count) |>
  group_by(location_city) |> 
  summarise(total_users = sum(service_user_count), .groups = 'drop')

total_shelters <- location_and_district |>
  group_by(location_city) |>
  count()
  
shelters_sum <- sum(total_shelters$n)

combined_df <- left_join(total_shelters, city_and_users, by = 'location_city') |>
  as.data.frame()

combined_df$users_per_year <- combined_df$total_users / 365

users_sum <- sum(combined_df$users_per_year)

df_2022 <- combined_df |>
  select(location_city, n, users_per_year)

total_row_2021 <- data.frame(location_city = "Total",
                         n = shelters_sum, users_per_year = users_sum)

shelters_w_total <- rbind(df_2022, total_row_2021)

shelters_w_total |>
  kable(col.names = c("District", "Numbers", "Users")) |>
  kable_styling(
    latex_options = c("striped", "hold_position"),
    font_size=10) |>
  row_spec(0, bold=T) |> 
  row_spec(7, bold=T)
```



```{r}
#| echo: false
#| warning: false
#| label: fig_01
#| fig-cap: Number of shelters in Toronto by district.
#| fig-align: center
#| fig-width: 6

## Number of shelters in Toronto

data_graph_shelters <- location_and_district |>
  filter(location_city != "N/A")

# Figure 01
# creating a bar graph
data_graph_shelters |>
  ggplot(aes (x = location_city, y = total_count, fill = location_city)) +
  geom_bar(stat = "identity", alpha = 1, width = 0.8) +
  scale_y_continuous(breaks = seq(0, 100, 10)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_fill_discrete(name = "City District") +
  theme_minimal() +
  labs(
     x = "Districts within the city of Toronto",
     y = "Number of Shelters"
   ) +
  theme(axis.line = element_line(colour = "#5a6472", # border for the figure
                                 size = 0.5, linetype = "solid"))
```
\

```{r}
#| echo: false
#| warning: false

users_2022 <- data_2022 |> 
  select(occupancy_date, program_area, service_user_count) |>
  group_by(occupancy_date = lubridate::floor_date(occupancy_date, 'month'), program_area) |> 
  summarise_each(funs(sum))

#converting repetitive daily users to per month average
users_2022$users_per_month <- users_2022$service_user_count / 30.417 

users_2021 <- data_2021 |>
  filter(program_area != "NA") |> 
  select(occupancy_date, program_area, service_user_count) |>
  group_by(occupancy_date = lubridate::floor_date(occupancy_date, 'month'), program_area) |> 
  summarise_each(funs(sum))

#converting repetitive daily users to per month average
users_2021$users_per_month <- users_2021$service_user_count / 30.417 
```


```{r}
#| echo: false
#| warning: false
#| label: fig_02
#| fig-cap: Number of people using shelters by Program - 2021.
#| fig-align: center
#| fig-width: 6


users_2021 |>
  select(occupancy_date, program_area, users_per_month) |> 
  ggplot(aes(x = occupancy_date, y = users_per_month, color = program_area)) +
  geom_bump(size = 1.25) +
  geom_point(size = 2.5) +
  theme_minimal() +
  labs(
    x = "Average daily users over the year",
    y = "Number of Users"
  ) +
  scale_x_date(date_breaks = "1 month",
               date_labels = "%b") +
  scale_colour_discrete(name = "Shelter Program Type",
                        labels = function(x) str_wrap(x, width = 15)) +
  scale_y_log10(breaks = breaks_log(n = 10),
              labels = label_comma()) +
  theme(legend.spacing.y = unit(0.5, 'cm'),
        axis.line = element_line(colour = "#5a6472", # border for the figure
                                 size = 0.5, linetype = "solid"))

```



```{r}
#| echo: false
#| warning: false
#| label: fig_03
#| fig-cap: Number of people using shelters over time by Program - 2022.
#| fig-align: center
#| fig-width: 6

users_2022 |> 
  select(occupancy_date, program_area, users_per_month) |> 
  ggplot(aes(x = occupancy_date, y = users_per_month, color = program_area)) +
  geom_bump(size = 1.25) +
  geom_point(size = 2.5) +
  theme_minimal() +
  labs(
    x = "Average daily users over the year",
    y = "Number of Users"
  ) +
  scale_x_date(date_breaks = "1 month",
               date_labels = "%b") +
  scale_colour_discrete(name = "Shelter Program Type",
                        labels = function(x) str_wrap(x, width = 15)) +
  scale_y_log10(breaks = breaks_log(n = 10),
              labels = label_comma()) +
  theme(legend.spacing.y = unit(0.5, 'cm'),
        axis.line = element_line(colour = "#5a6472", # border for the figure
                                 size = 0.5, linetype = "solid"))

```



```{r}
#| echo: false
#| warning: false


users_sector_2021 <- data_2021 |>
  select(occupancy_date, sector, service_user_count) |>
  group_by(occupancy_date = lubridate::floor_date(occupancy_date, 'month'), sector) |> 
  summarise_each(funs(sum))

#converting repetitive daily users to per month average
users_sector_2021$users_per_month <- users_sector_2021$service_user_count / 30.417 

users_sector_2022 <- data_2022 |> 
  select(occupancy_date, sector, service_user_count) |>
  group_by(occupancy_date = lubridate::floor_date(occupancy_date, 'month'), sector) |> 
  summarise_each(funs(sum))

#converting repetitive daily users to per month average
users_sector_2022$users_per_month <- users_sector_2022$service_user_count / 30.417 

```


```{r}
#| echo: false
#| warning: false
#| label: fig_04
#| fig-cap: Number of people using shelters over time by Sector - 2021.
#| fig-align: center
#| fig-width: 6

users_sector_2021 |> 
  ggplot(aes(x = occupancy_date, y = users_per_month, fill = sector)) +
  geom_area() +
  theme_minimal() +
  labs(
    x = "Average daily users over the year",
    y = "Number of Users",
    fill = "Sector"
  ) +
  scale_x_date(date_breaks = "1 month",
               date_labels = "%b") +
    scale_y_continuous(limits = c(0, 10000),
                       breaks = seq(1000, 10000, 1000)) +
  theme(legend.spacing.y = unit(0.5, 'cm'),
        axis.line = element_line(colour = "#5a6472", # border for the figure
                                 size = 0.5, linetype = "solid"))

```


```{r}
#| echo: false
#| warning: false
#| label: fig_05
#| fig-cap: Number of people using shelters over time by Sector - 2022.
#| fig-align: center
#| fig-width: 6

users_sector_2022 |> 
  ggplot(aes(x = occupancy_date, y = users_per_month, fill = sector)) +
  geom_area() +
  theme_minimal() +
  labs(
    x = "Average daily users over the year",
    y = "Number of Users",
    fill = "Sector"
  ) +
  scale_x_date(date_breaks = "1 month",
               date_labels = "%b") +
  scale_y_continuous(limits = c(0, 10000),
                     breaks = seq(1000, 10000, 1000)) +
  theme(legend.spacing.y = unit(0.5, 'cm'),
        axis.line = element_line(colour = "#5a6472", # border for the figure
                                 size = 0.5, linetype = "solid"))

```
\



# Discussion

Coming soon...

# Limitations

Coming soon...


\newpage

# Appendix

## Code

The report was created using *`R`* [@R] and *`R Studio`* [@r_studio] with *`Quarto`* [@quarto] -- a new version of *`R Markdown`* [@r_markdown]. The main library utilized for this purpose is *`Tidyverse`* [@tidyverse]. Its used sub-packages include *`dplyr`* [@dplyr] to enable query-like syntax, and *`ggplot`* [@ggplot] to create graphs and charts. Other packages and tools include *`here`* [@here], *`janitor`* [@janitor], *`knitr`* [@knitr], *`kableExtra`* [@kableExtra], and *`scales`* [@scales]. Their respective function is to find *csv* files, clean data, generate reports, create tables, and enable customized legends and break points. Lastly, as *csv* files convert the date column to character, the *`lubridate`* [@lubridate] package was used to convert character dates to proper dates, something essential to plot date or time variables.

\newpage

# References
